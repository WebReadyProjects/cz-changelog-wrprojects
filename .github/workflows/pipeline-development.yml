name: Development - Pipeline

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development
    paths-ignore:
      - '**/*.md'
      - '**/*.png'

jobs:

  # Run GitGuardian
  gitguardian:
    name: GitGuardian Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: GitGuardian Scanner
        uses: GitGuardian/gg-shield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.before }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  # Run Conventional Name Branch
  lint:
    name: Conventional Name Branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Git Version
        uses: codacy/git-version@2.5.3

  # Run linter to ensure new code respect coding rules
  linter:
    name: Lint Code Base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name : Setup NodeJS
        uses: actions/setup-node@v3.5.0
        with:
          node-version: 16
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: development
          DISABLE_ERRORS: false
          LINTER_RULES_PATH: .github/config/linters
          CSS_FILE_NAME: .stylelintrc.yml
          EDITORCONFIG_FILE_NAME: .ecrc
          IGNORE_GITIGNORED_FILES: true
          JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
          JAVASCRIPT_DEFAULT_STYLE: prettier
          MARKDOWN_CONFIG_FILE: .markdown.json
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Run prettier to make your files look nice
  prettier:
    name: Prettier Code Base
    runs-on: ubuntu-latest
    needs: [ linter ]
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        # Make sure the actual branch is checked out when running on pull requests
        ref: ${{ github.head_ref }}
        # This is important to fetch the changes to the previous commit
        fetch-depth: 0
    - name: Prettify Code
      uses: creyD/prettier_action@v4.2
      with:
        # This part is also where you can pass other options, for example:
        prettier_options: --write **/*.{js,md}
        only_changed: True
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Run TypeScript to keep your ts files up to standard
  typescript:
    name: TypeScript Code Base
    needs: [ linter, prettier ]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - name: install node v14.16
      uses: actions/setup-node@v3.5.0
      with:
        node-version: 14.16
    - name: yarn install
      run: yarn install
    - name: TypeScript Compiler
      uses: icrawl/action-tsc@v1

  # Run CodeQL on branch
  analyze:
    name: Analyze Code Base
    runs-on: ubuntu-latest
    needs: [ linter, prettier, typescript ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript
          config-file: ./.github/config/codeql.yml
      - name: Analyze Code Base
        uses: github/codeql-action/analyze@v1

  # Run format dprint for JS
  format:
    name: Format code
    needs: [ linter, prettier, typescript, analyze ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Dprint
        run: |
          curl -fsSL https://dprint.dev/install.sh | sh
          cp /home/runner/.dprint/bin/dprint /usr/local/bin/dprint
          npm install -g eslint
      - name: Checkout development
        run: git checkout main
      - name: Format code
        run: |
          dprint fmt --config .github/config/dprint.json
          npm run format
      - name: Publish formatted code
        run: |
          set +e
          git status
          git add --update
          git commit -m "♻️ refactor: Auto-format code"
          git push
          set -e
